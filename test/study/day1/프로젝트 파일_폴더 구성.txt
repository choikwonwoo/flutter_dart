# 프로젝트 폴더/파일 기본 구성

### **파일 및 폴더 구성**

- android : 안드로이드 앱 구성
- ios : ios 앱 구성
- lib : 다트 파일
- test : test다트 파일

- lib/main.dart : 앱의 메인 다트 파일
- .gitignore : 깃에 업로드 하지 않을 파일 등록
- pubspec.yaml : 플러터 프로젝트의 메인 환경 파일

** 앱의 패키지나 리소스를 추가하려면 pubspec.yaml 파일에 등록해야 한다.

### main()

```dart
import 'package:flutter/material.dart';
void main() {
  runApp(const MyApp());
}
```

- import
    - 패키지를 불러올 때 사용한다.
- main() 함수
    - 다트 엔진이 호출하면 앱이 실행
    - runApp()함수를 호출 이때 매개변수로 위젯을 지정하는데 위젯은 화면을 구성하는 클래스
    - 앱의 첫 화면을 구성할 위젯을 지정한 것이며 이 위젯의 화면이 나오면서 앱 실행

### MyApp 클래스

```dart
class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(

        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}
```

- 위젯 클래스는 StatelessWidget이나 SatatefulWidget 가운데 하나를 상속받아 작성한다
- 위젯은 화면 구성이 목적이므로 build() 함수에 화면을 어떻게 구성할지 명시해 준다.
- 위젯클래스가 실행되면 자동으로 build 함수가 호출되고 이 함수에서 반환한 위젯이 화면에 출력된다.
- `MaterialApp` ,`MyHomePage`또한 위젯 클래스이다. 전자는 머터리얼 디자인 적용을 담당하고 후자는 사용자 정의 위젯이다.
- MyApp 클래스에서는 머터리얼 디자인을 적용하며 구체적인 화면은 `MyHomePage` 위젯에서 구성한다.

### MyHomePage 클래스

```dart
class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}
```

- StatefulWidget 을 상속받아 작성
- 위젯의 화면 구성과 위젯에 출력되는 데이터 등을 별도 dml state 클래스에 지정하는데 _MyHomePageState가 state 클래스 이다.
- StatefulWidget 클래스가 실행되면 createState()함수가 자동으로 호출되며 이 함수에서 StatefulWidget 을 위한 state 클래스의 객체를 반환한다.

### _MyHomePageState 클래스

```dart
class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;

  void _incrementCounter() {
    setState(() {
      _counter++;
    });
  }

  @override
  Widget build(BuildContext context) {
     return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: Text(widget.title),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            const Text(
              'hello',
            ),
            Text(
              '$_counter',
              style: Theme.of(context).textTheme.headlineMedium,
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _incrementCounter,
        tooltip: 'Increment',
        child: const Icon(Icons.add),
      ),
    );
  }
}
```

- State를 상속받은 _MyHomePageState 클래스의 build()함수가 자동으로 호출되면서 이 함수에 구현한 위젯이 화면에 출력된다
- Scaffold는 appBar, body, floatfingActionButton등 으로 화면의 구성요소를 묶어주는 위젯이다.
    - appBar : 화면 위쪽의 타이틀 바
    - body : 화면 중간 text위젯으로 문자열 출력
    - floatfingActionButton : 화면 하단의 둥근 버튼 표시

순서

main → myApp → myhomepage → myhomestate

화면을 구성하는 대부분 myhomestate build 함수에서 작성